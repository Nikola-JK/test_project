; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\pwm.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\pwm.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\Source\APP -I.\Source\BSP -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\inc -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\Source\Libraries\CMSIS\Core\CM3 -I.\Source\APP\HMI -I"D:\Program Files (x86)\keil\ARM\RV31\INC" -I"D:\Program Files (x86)\keil\ARM\PACK\ARM\CMSIS\3.20.3\CMSIS\Include" -I"D:\Program Files (x86)\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.2\Device\Include" -DSTM32F10X_HD --omf_browse=.\obj\pwm.crf Source\APP\pwm.c]
                          THUMB

                          AREA ||i.GPIO_Configuration||, CODE, READONLY, ALIGN=2

                  GPIO_Configuration PROC
;;;134      */
;;;135    void GPIO_Configuration(void)
000000  b508              PUSH     {r3,lr}
;;;136    {
;;;137      GPIO_InitTypeDef GPIO_InitStructure;
;;;138    
;;;139    #ifdef STM32F10X_CL
;;;140      /* GPIOE Configuration: Channel 1/1N, 2/2N, 3/3N and 4 as alternate function push-pull */
;;;141    //  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9|GPIO_Pin_11|GPIO_Pin_13|GPIO_Pin_14|
;;;142    //                                GPIO_Pin_8|GPIO_Pin_10|GPIO_Pin_12;
;;;143    //  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
;;;144    //  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;145    
;;;146    //  GPIO_Init(GPIOE, &GPIO_InitStructure);
;;;147    
;;;148    //  /* TIM1 Full remapping pins */
;;;149    //  GPIO_PinRemapConfig(GPIO_FullRemap_TIM1, ENABLE); 
;;;150    
;;;151    #else
;;;152      /* GPIOA Configuration: Channel 1 as alternate function push-pull */
;;;153      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
000002  2001              MOVS     r0,#1
000004  f8ad0000          STRH     r0,[sp,#0]
;;;154      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000008  2018              MOVS     r0,#0x18
00000a  f88d0003          STRB     r0,[sp,#3]
;;;155      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000e  2003              MOVS     r0,#3
000010  f88d0002          STRB     r0,[sp,#2]
;;;156      GPIO_Init(GPIOA, &GPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  4802              LDR      r0,|L1.32|
000018  f7fffffe          BL       GPIO_Init
;;;157    
;;;158    #endif
;;;159    }
00001c  bd08              POP      {r3,pc}
;;;160    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      0x40010800

                          AREA ||i.PWM_Config||, CODE, READONLY, ALIGN=2

                  PWM_Config PROC
;;;53       */
;;;54     int PWM_Config(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56       /*!< At this stage the microcontroller clock setting is already configured, 
;;;57            this is done through SystemInit() function which is called from startup
;;;58            file (startup_stm32f10x_xx.s) before to branch to application main.
;;;59            To reconfigure the default setting of SystemInit() function, refer to
;;;60            system_stm32f10x.c file
;;;61          */     
;;;62            
;;;63       /* System Clocks Configuration */
;;;64       RCC_Configuration();
000002  f7fffffe          BL       RCC_Configuration
;;;65     
;;;66       /* GPIO Configuration */
;;;67       GPIO_Configuration();
000006  f7fffffe          BL       GPIO_Configuration
;;;68     
;;;69       /* TIM1 Configuration ---------------------------------------------------
;;;70        Generate 7 PWM signals with 4 different duty cycles:
;;;71        TIM1CLK = SystemCoreClock, Prescaler = 0, TIM1 counter clock = SystemCoreClock
;;;72        SystemCoreClock is set to 72 MHz for Low-density, Medium-density, High-density
;;;73        and Connectivity line devices and to 24 MHz for Low-Density Value line and
;;;74        Medium-Density Value line devices
;;;75        
;;;76        The objective is to generate 7 PWM signal at 17.57 KHz:
;;;77          - TIM1_Period = (SystemCoreClock / 17570) - 1
;;;78        The channel 1 and channel 1N duty cycle is set to 50%
;;;79        The Timer pulse is calculated as follows:
;;;80          - ChannelxPulse = DutyCycle * (TIM1_Period - 1) / 100
;;;81       ----------------------------------------------------------------------- */
;;;82       /* Compute the value to be set in ARR regiter to generate signal frequency at 13hz */
;;;83       TimerPeriod = (10000 / Frequency ) - 1;
00000a  f24030e7          MOV      r0,#0x3e7
00000e  491f              LDR      r1,|L2.140|
000010  8008              STRH     r0,[r1,#0]
;;;84       /* Compute CCR1 value to generate a duty cycle at 50% for channel 1 and 1N */
;;;85       Channel1Pulse = (uint16_t) (((uint32_t) 5 * (TimerPeriod - 1)) / 10);
000012  4608              MOV      r0,r1
000014  8800              LDRH     r0,[r0,#0]  ; TimerPeriod
000016  1e40              SUBS     r0,r0,#1
000018  eb000080          ADD      r0,r0,r0,LSL #2
00001c  210a              MOVS     r1,#0xa
00001e  fbb0f0f1          UDIV     r0,r0,r1
000022  491b              LDR      r1,|L2.144|
000024  8008              STRH     r0,[r1,#0]
;;;86     
;;;87     
;;;88       /* Time Base configuration */
;;;89       TIM_TimeBaseStructure.TIM_Prescaler = 7199;
000026  f641401f          MOV      r0,#0x1c1f
00002a  491a              LDR      r1,|L2.148|
00002c  8008              STRH     r0,[r1,#0]
;;;90       TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
00002e  2000              MOVS     r0,#0
000030  8048              STRH     r0,[r1,#2]
;;;91       TIM_TimeBaseStructure.TIM_Period = TimerPeriod;
000032  4816              LDR      r0,|L2.140|
000034  8800              LDRH     r0,[r0,#0]  ; TimerPeriod
000036  8088              STRH     r0,[r1,#4]
;;;92       TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000038  2000              MOVS     r0,#0
00003a  80c8              STRH     r0,[r1,#6]
;;;93       TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
00003c  7208              STRB     r0,[r1,#8]
;;;94     
;;;95       TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
00003e  f04f4080          MOV      r0,#0x40000000
000042  f7fffffe          BL       TIM_TimeBaseInit
;;;96     
;;;97       /* Channel 1, 2,3 and 4 Configuration in PWM mode */
;;;98       TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
000046  2070              MOVS     r0,#0x70
000048  4913              LDR      r1,|L2.152|
00004a  8008              STRH     r0,[r1,#0]
;;;99       TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00004c  2001              MOVS     r0,#1
00004e  8048              STRH     r0,[r1,#2]
;;;100      TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Enable;
000050  2004              MOVS     r0,#4
000052  8088              STRH     r0,[r1,#4]
;;;101      TIM_OCInitStructure.TIM_Pulse = Channel1Pulse;
000054  480e              LDR      r0,|L2.144|
000056  8800              LDRH     r0,[r0,#0]  ; Channel1Pulse
000058  80c8              STRH     r0,[r1,#6]
;;;102      TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
00005a  2000              MOVS     r0,#0
00005c  8108              STRH     r0,[r1,#8]
;;;103      TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCNPolarity_High;
00005e  8148              STRH     r0,[r1,#0xa]
;;;104      TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Set;
000060  f44f7080          MOV      r0,#0x100
000064  8188              STRH     r0,[r1,#0xc]
;;;105      TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCIdleState_Reset;
000066  2000              MOVS     r0,#0
000068  81c8              STRH     r0,[r1,#0xe]
;;;106    
;;;107      TIM_OC1Init(TIM2, &TIM_OCInitStructure);
00006a  f04f4080          MOV      r0,#0x40000000
00006e  f7fffffe          BL       TIM_OC1Init
;;;108    
;;;109      /* TIM1 counter enable */
;;;110      TIM_Cmd(TIM2, DISABLE);
000072  2100              MOVS     r1,#0
000074  f04f4080          MOV      r0,#0x40000000
000078  f7fffffe          BL       TIM_Cmd
;;;111    
;;;112      /* TIM1 Main Output Enable */
;;;113      TIM_CtrlPWMOutputs(TIM2, DISABLE);
00007c  2100              MOVS     r1,#0
00007e  f04f4080          MOV      r0,#0x40000000
000082  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;114    
;;;115    	return 0;
000086  2000              MOVS     r0,#0
;;;116    }
000088  bd10              POP      {r4,pc}
;;;117    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      TimerPeriod
                  |L2.144|
                          DCD      Channel1Pulse
                  |L2.148|
                          DCD      TIM_TimeBaseStructure
                  |L2.152|
                          DCD      TIM_OCInitStructure

                          AREA ||i.RCC_Configuration||, CODE, READONLY, ALIGN=1

                  RCC_Configuration PROC
;;;122      */
;;;123    void RCC_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;124    {
;;;125      /* TIM1, GPIOA, GPIOB, GPIOE and AFIO clocks enable */
;;;126    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;127      RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2005              MOVS     r0,#5
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;128    }
000012  bd10              POP      {r4,pc}
;;;129    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  TIM_TimeBaseStructure
                          %        10
                  TIM_OCInitStructure
                          %        16

                          AREA ||.data||, DATA, ALIGN=1

                  TimerPeriod
000000  0000              DCW      0x0000
                  Channel1Pulse
000002  0000              DCW      0x0000
                  Channel2Pulse
000004  0000              DCW      0x0000
                  Channel3Pulse
000006  0000              DCW      0x0000
                  Channel4Pulse
000008  0000              DCW      0x0000
