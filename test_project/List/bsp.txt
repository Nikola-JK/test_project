; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\Source\APP -I.\Source\BSP -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\inc -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\Source\Libraries\CMSIS\Core\CM3 -I.\Source\APP\HMI -I"D:\Program Files (x86)\keil\ARM\RV31\INC" -I"D:\Program Files (x86)\keil\ARM\PACK\ARM\CMSIS\3.20.3\CMSIS\Include" -I"D:\Program Files (x86)\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.2\Device\Include" -DSTM32F10X_HD --omf_browse=.\obj\bsp.crf Source\BSP\bsp.c]
                          THUMB

                          AREA ||i.BSP_Init||, CODE, READONLY, ALIGN=2

                  BSP_Init PROC
;;;104    
;;;105    void  BSP_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;106    {
;;;107        /*库版本升级后直接初始化时钟*/
;;;108        SystemInit();
000002  f7fffffe          BL       SystemInit
;;;109        /* Enable GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, GPIOF, GPIOG and AFIO clocks */
;;;110        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC
000006  2101              MOVS     r1,#1
000008  f24010fd          MOV      r0,#0x1fd
00000c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;111                               | RCC_APB2Periph_GPIOD | RCC_APB2Periph_GPIOE | RCC_APB2Periph_GPIOF | RCC_APB2Periph_GPIOG
;;;112                               | RCC_APB2Periph_AFIO, ENABLE);
;;;113        /* Enable PWR and BKP clock */
;;;114        RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);
000010  2101              MOVS     r1,#1
000012  f04f50c0          MOV      r0,#0x18000000
000016  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;115        /* Enable write access to Backup domain */
;;;116        PWR_BackupAccessCmd(ENABLE);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       PWR_BackupAccessCmd
;;;117        /* Clear Tamper pin Event(TE) pending flag */
;;;118        BKP_ClearFlag();
000020  f7fffffe          BL       BKP_ClearFlag
;;;119        GPIO_Config();
000024  f7fffffe          BL       GPIO_Config
;;;120        USART_Configuration();
000028  f7fffffe          BL       USART_Configuration
;;;121        NVICConfig();
00002c  f7fffffe          BL       NVICConfig
;;;122        //LCD_Init();
;;;123        /*固件库升级到3.0.0后可用以下函数配置滴答*/
;;;124        /* 配置systic作为1ms中断,这个函数在
;;;125           \Libraries\CMSIS\Core\CM3\core_cm3.c */
;;;126        SysTick_Config(SystemFrequency / 1000);           /* Initialize the uC/OS-II tick interrupt                   */
000030  4814              LDR      r0,|L1.132|
000032  6800              LDR      r0,[r0,#0]  ; SystemFrequency
000034  f44f727a          MOV      r2,#0x3e8
000038  fbb0f1f2          UDIV     r1,r0,r2
00003c  f1b17f80          CMP      r1,#0x1000000
000040  d300              BCC      |L1.68|
000042  e01d              B        |L1.128|
                  |L1.68|
000044  f021407f          BIC      r0,r1,#0xff000000
000048  1e40              SUBS     r0,r0,#1
00004a  f04f22e0          MOV      r2,#0xe000e000
00004e  6150              STR      r0,[r2,#0x14]
000050  1750              ASRS     r0,r2,#29
000052  220f              MOVS     r2,#0xf
000054  2800              CMP      r0,#0
000056  da07              BGE      |L1.104|
000058  0713              LSLS     r3,r2,#28
00005a  0e1d              LSRS     r5,r3,#24
00005c  4b0a              LDR      r3,|L1.136|
00005e  f000040f          AND      r4,r0,#0xf
000062  1f24              SUBS     r4,r4,#4
000064  551d              STRB     r5,[r3,r4]
000066  e003              B        |L1.112|
                  |L1.104|
000068  0713              LSLS     r3,r2,#28
00006a  0e1c              LSRS     r4,r3,#24
00006c  4b07              LDR      r3,|L1.140|
00006e  541c              STRB     r4,[r3,r0]
                  |L1.112|
000070  bf00              NOP      
000072  2000              MOVS     r0,#0
000074  f04f22e0          MOV      r2,#0xe000e000
000078  6190              STR      r0,[r2,#0x18]
00007a  2007              MOVS     r0,#7
00007c  6110              STR      r0,[r2,#0x10]
00007e  bf00              NOP      
                  |L1.128|
;;;127    }
000080  bd70              POP      {r4-r6,pc}
;;;128    
                          ENDP

000082  0000              DCW      0x0000
                  |L1.132|
                          DCD      SystemFrequency
                  |L1.136|
                          DCD      0xe000ed18
                  |L1.140|
                          DCD      0xe000e400

                          AREA ||i.BSP_IntDisAll||, CODE, READONLY, ALIGN=1

                  BSP_IntDisAll PROC
;;;140    */
;;;141    void  BSP_IntDisAll(void)
000000  4770              BX       lr
;;;142    {
;;;143        // CPU_IntDis();
;;;144    }
;;;145    
                          ENDP


                          AREA ||i.GPIO_Config||, CODE, READONLY, ALIGN=2

                  GPIO_Config PROC
;;;153    
;;;154    void GPIO_Config(void)
000000  b508              PUSH     {r3,lr}
;;;155    {
;;;156        GPIO_InitTypeDef GPIO_InitStructure;
;;;157    		
;;;158        /*LED1*/
;;;159        GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_14;
000002  f44f4080          MOV      r0,#0x4000
000006  f8ad0000          STRH     r0,[sp,#0]
;;;160        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		 //推挽输出
00000a  2010              MOVS     r0,#0x10
00000c  f88d0003          STRB     r0,[sp,#3]
;;;161        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;162        GPIO_Init(GPIOA, &GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  480f              LDR      r0,|L3.88|
00001a  f7fffffe          BL       GPIO_Init
;;;163    		/*地址编码引脚*/
;;;164    		GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_7 | GPIO_Pin_11 | GPIO_Pin_12;
00001e  f44f50c4          MOV      r0,#0x1880
000022  f8ad0000          STRH     r0,[sp,#0]
;;;165        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;		 //推挽输出
000026  2004              MOVS     r0,#4
000028  f88d0003          STRB     r0,[sp,#3]
;;;166        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002c  2003              MOVS     r0,#3
00002e  f88d0002          STRB     r0,[sp,#2]
;;;167        GPIO_Init(GPIOA, &GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4808              LDR      r0,|L3.88|
000036  f7fffffe          BL       GPIO_Init
;;;168    		GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_0 | GPIO_Pin_1;
00003a  2003              MOVS     r0,#3
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;169        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;		 //推挽输出
000040  2004              MOVS     r0,#4
000042  f88d0003          STRB     r0,[sp,#3]
;;;170        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000046  2003              MOVS     r0,#3
000048  f88d0002          STRB     r0,[sp,#2]
;;;171        GPIO_Init(GPIOB, &GPIO_InitStructure);
00004c  4669              MOV      r1,sp
00004e  4803              LDR      r0,|L3.92|
000050  f7fffffe          BL       GPIO_Init
;;;172    }
000054  bd08              POP      {r3,pc}
;;;173    
                          ENDP

000056  0000              DCW      0x0000
                  |L3.88|
                          DCD      0x40010800
                  |L3.92|
                          DCD      0x40010c00

                          AREA ||i.NVICConfig||, CODE, READONLY, ALIGN=1

                  NVICConfig PROC
;;;173    
;;;174    void NVICConfig(void)
000000  b508              PUSH     {r3,lr}
;;;175    {
;;;176        NVIC_InitTypeDef NVIC_InitStructure;
;;;177        /* Configure one bit for preemption priority */
;;;178        NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
000002  f44f60c0          MOV      r0,#0x600
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;179        /* Enable the USART1 Interrupt */
;;;180        NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
00000a  2025              MOVS     r0,#0x25
00000c  f88d0000          STRB     r0,[sp,#0]
;;;181        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
000010  2000              MOVS     r0,#0
000012  f88d0001          STRB     r0,[sp,#1]
;;;182        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000016  2001              MOVS     r0,#1
000018  f88d0003          STRB     r0,[sp,#3]
;;;183        NVIC_Init(&NVIC_InitStructure);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       NVIC_Init
;;;184        NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
000022  2026              MOVS     r0,#0x26
000024  f88d0000          STRB     r0,[sp,#0]
;;;185        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000028  2001              MOVS     r0,#1
00002a  f88d0001          STRB     r0,[sp,#1]
;;;186        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00002e  f88d0003          STRB     r0,[sp,#3]
;;;187        NVIC_Init(&NVIC_InitStructure);
000032  4668              MOV      r0,sp
000034  f7fffffe          BL       NVIC_Init
;;;188    		
;;;189    		NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;
000038  2027              MOVS     r0,#0x27
00003a  f88d0000          STRB     r0,[sp,#0]
;;;190        NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
00003e  2002              MOVS     r0,#2
000040  f88d0002          STRB     r0,[sp,#2]
;;;191        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000044  2001              MOVS     r0,#1
000046  f88d0003          STRB     r0,[sp,#3]
;;;192        NVIC_Init(&NVIC_InitStructure);
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       NVIC_Init
;;;193    }
000050  bd08              POP      {r3,pc}
;;;194    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  HSEStartUpStatus
000000  01                DCB      0x01
